// Variable
$main-cl: var(--main-cl);
$noto: var(--noto);

// MIXINS
@mixin max-media($width) {
    @media screen and (max-width: $width) {
        @content;
    }
}

@mixin min-media($width) {
    @media screen and (min-width: $width) {
        @content;
    }
}

@mixin min-max($min, $max) {
    @media screen and (min-width: $min) and (max-width: $max) {
        @content;
    }
}

//scroll-base
@mixin scrollbar-v($width: 0px, $thumb: $main-cl, $track: transparent) {
    &::-webkit-scrollbar {
        width: $width;
    }

    &::-webkit-scrollbar-thumb {
        background: $thumb;
        border-radius: 990px;
    }

    &::-webkit-scrollbar-track {
        background: $track;
    }
}

@mixin scrollbar-h($height: 0px, $thumb: $main-cl, $track: transparent) {
    &::-webkit-scrollbar {
        height: $height;
    }

    &::-webkit-scrollbar-thumb {
        background: $thumb;
        border-radius: 990px;
    }

    &::-webkit-scrollbar-track {
        background: $track;
    }
}

@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

@mixin pos-mid() {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin pos-full() {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
}

@mixin pos-full-fixed() {
    position: fixed;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
}

@mixin flex-mid() {
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
}

@mixin hidden() {
    opacity: 0;
    visibility: hidden;
}

@mixin visible() {
    opacity: 1;
    visibility: visible;
}

@mixin line-clamp($args) {
    display: -webkit-box;
    -webkit-line-clamp: $args;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

@mixin break-text($width) {
    white-space: nowrap;
    word-break: keep-all;
    text-overflow: ellipsis;
    overflow: hidden;
    width: $width;
}

@mixin lh($lh, $fz) {
    line-height: ($lh / $fz);
}

@mixin arrow($color: #333, $width, $height: $width, $direction: right) {
    @if ($direction ==left) {
        border-top: calc($width / 2) solid transparent;
        border-bottom: calc($width / 2) solid transparent;
        border-right: $height solid $color;
    } @else if ($direction ==top) {
        border-left: calc($width / 2) solid transparent;
        border-right: calc($width / 2) solid transparent;
        border-bottom: $height solid $color;
    } @else if ($direction ==down) {
        border-left: calc($width / 2) solid transparent;
        border-right: calc($width / 2) solid transparent;
        border-top: $height solid $color;
    } @else {
        border-top: calc($width / 2) solid transparent;
        border-bottom: calc($width / 2) solid transparent;
        border-left: $height solid $color;
    }
}

@mixin arrow-line($color: #333, $width: 10, $size: 3px, $direction: right) {
    @include size(calc($width / 100 * 70.725 * 1px));
    transform: rotate(45deg);

    @if ($direction ==left) {
        border-bottom: solid $size $color;
        border-left: solid $size $color;
    } @else if ($direction ==top) {
        border-top: solid $size $color;
        border-left: solid $size $color;
    } @else if ($direction ==bottom) {
        border-bottom: solid $size $color;
        border-right: solid $size $color;
    } @else {
        border-top: solid $size $color;
        border-right: solid $size $color;
    }
}

@mixin arrow-corner($color: #333, $width: 10px, $height: $width, $direction-a: bottom, $direction-b: right) {
    @include size(0);

    @if ($direction-a ==top and $direction-b ==left) {
        border-left: $width solid $color;
        border-bottom: $height solid transparent;
    } @else if ($direction-a ==top and $direction-b ==right) {
        border-right: $width solid $color;
        border-bottom: $height solid transparent;
    } @else if ($direction-a ==bottom and $direction-b ==left) {
        border-left: $width solid $color;
        border-top: $height solid transparent;
    } @else {
        border-right: $width solid $color;
        border-top: $height solid transparent;
    }
}

@mixin circle($size, $color: #333) {
    @include size($size);
    background: $color;
    border-radius: 100%;
 }
